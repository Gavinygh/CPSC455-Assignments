{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nimport { REQUEST_STATE } from '../utils';\nimport { getStoredReceipesAsync, getDeletedReceipesAsync, addReceipeAsync, deleteReceipeAsync, restoreReceipeAsync } from './thunks';\nconst INITIAL_STATE = {\n  storedReceipes: [],\n  deletedReceipes: [],\n  getStoredReceipes: REQUEST_STATE.IDLE,\n  getDeletedReceipes: REQUEST_STATE.IDLE,\n  addReceipe: REQUEST_STATE.IDLE,\n  deleteReceipe: REQUEST_STATE.IDLE,\n  restoreReceipe: REQUEST_STATE.IDLE,\n  error: null\n};\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: INITIAL_STATE,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getStoredReceipesAsync.pending, state => {\n      state.getStoredReceipes = REQUEST_STATE.PENDING;\n      state.error = null;\n    }).addCase(getStoredReceipesAsync.fulfilled, (state, action) => {\n      state.getStoredReceipes = REQUEST_STATE.FULFILLED;\n      state.storedReceipes = action.payload;\n    }).addCase(getStoredReceipesAsync.rejected, (state, action) => {\n      state.getStoredReceipes = REQUEST_STATE.REJECTED;\n      state.error = action.error;\n    }).addCase(getDeletedReceipesAsync.pending, state => {\n      state.getDeletedReceipes = REQUEST_STATE.PENDING;\n      state.error = null;\n    }).addCase(getDeletedReceipesAsync.fulfilled, (state, action) => {\n      state.getDeletedReceipes = REQUEST_STATE.FULFILLED;\n      state.deletedReceipes = action.payload;\n    }).addCase(getDeletedReceipesAsync.rejected, (state, action) => {\n      state.getDeletedReceipes = REQUEST_STATE.REJECTED;\n      state.error = action.error;\n    }).addCase(addReceipeAsync.pending, state => {\n      state.addReceipe = REQUEST_STATE.PENDING;\n      state.error = null;\n    }).addCase(addReceipeAsync.fulfilled, (state, action) => {\n      state.addReceipe = REQUEST_STATE.FULFILLED;\n      state.storedReceipes.push(action.payload);\n    }).addCase(addReceipeAsync.rejected, (state, action) => {\n      state.addReceipe = REQUEST_STATE.REJECTED;\n      state.error = action.error;\n    }).addCase(deleteReceipeAsync.pending, state => {\n      state.deleteReceipe = REQUEST_STATE.PENDING;\n      state.error = null;\n    }).addCase(deleteReceipeAsync.fulfilled, (state, action) => {\n      state.deleteReceipe = REQUEST_STATE.FULFILLED;\n      const foundReceipe = state.storedReceipes.find(receipe => receipe.name === action.payload.name && receipe.ingredients === action.payload.ingredients && receipe.description === action.payload.description);\n      const index = state.storedReceipes.indexOf(foundReceipe);\n      state.storedReceipes.splice(index, 1);\n      state.deletedReceipes.push(foundReceipe);\n    }).addCase(deleteReceipeAsync.rejected, (state, action) => {\n      state.deleteReceipe = REQUEST_STATE.REJECTED;\n      state.error = action.error;\n    }).addCase(restoreReceipeAsync.pending, state => {\n      state.restoreReceipe = REQUEST_STATE.PENDING;\n      state.error = null;\n    }).addCase(restoreReceipeAsync.fulfilled, (state, action) => {\n      state.restoreReceipe = REQUEST_STATE.FULFILLED;\n      const foundReceipe = state.deletedReceipes.find(receipe => receipe.name === action.payload.name && receipe.ingredients === action.payload.ingredients && receipe.description === action.payload.description);\n      const index = state.deletedReceipes.indexOf(foundReceipe);\n      state.deletedReceipes.splice(index, 1);\n      state.storedReceipes.push(action.payload);\n    }).addCase(restoreReceipeAsync.rejected, (state, action) => {\n      state.restoreReceipe = REQUEST_STATE.REJECTED;\n      state.error = action.error;\n    });\n  }\n});\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","current","REQUEST_STATE","getStoredReceipesAsync","getDeletedReceipesAsync","addReceipeAsync","deleteReceipeAsync","restoreReceipeAsync","INITIAL_STATE","storedReceipes","deletedReceipes","getStoredReceipes","IDLE","getDeletedReceipes","addReceipe","deleteReceipe","restoreReceipe","error","usersSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","PENDING","fulfilled","action","FULFILLED","payload","rejected","REJECTED","push","foundReceipe","find","receipe","ingredients","description","index","indexOf","splice","reducer"],"sources":["/Users/gavinyang/Desktop/CPSC455/CPSC455-Assignments/assignment2/client/src/redux/users/reducer.js"],"sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\nimport { REQUEST_STATE } from '../utils';\nimport { getStoredReceipesAsync, getDeletedReceipesAsync, addReceipeAsync, deleteReceipeAsync, restoreReceipeAsync } from './thunks';\n\nconst INITIAL_STATE = {\n  storedReceipes: [],\n  deletedReceipes: [],\n  getStoredReceipes: REQUEST_STATE.IDLE,\n  getDeletedReceipes: REQUEST_STATE.IDLE,\n  addReceipe: REQUEST_STATE.IDLE,\n  deleteReceipe: REQUEST_STATE.IDLE,\n  restoreReceipe: REQUEST_STATE.IDLE,\n  error: null\n};\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: INITIAL_STATE,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getStoredReceipesAsync.pending, (state) => {\n        state.getStoredReceipes = REQUEST_STATE.PENDING;\n        state.error = null;\n      })\n      .addCase(getStoredReceipesAsync.fulfilled, (state, action) => {\n        state.getStoredReceipes = REQUEST_STATE.FULFILLED;\n        state.storedReceipes = action.payload;\n      })\n      .addCase(getStoredReceipesAsync.rejected, (state, action) => {\n        state.getStoredReceipes = REQUEST_STATE.REJECTED;\n        state.error = action.error;\n      })\n      .addCase(getDeletedReceipesAsync.pending, (state) => {\n        state.getDeletedReceipes = REQUEST_STATE.PENDING;\n        state.error = null;\n      })\n      .addCase(getDeletedReceipesAsync.fulfilled, (state, action) => {\n        state.getDeletedReceipes = REQUEST_STATE.FULFILLED;\n        state.deletedReceipes = action.payload;\n      })\n      .addCase(getDeletedReceipesAsync.rejected, (state, action) => {\n        state.getDeletedReceipes = REQUEST_STATE.REJECTED;\n        state.error = action.error;\n      })\n      .addCase(addReceipeAsync.pending, (state) => {\n        state.addReceipe = REQUEST_STATE.PENDING;\n        state.error = null;\n      })\n      .addCase(addReceipeAsync.fulfilled, (state, action) => {\n        state.addReceipe = REQUEST_STATE.FULFILLED;\n        state.storedReceipes.push(action.payload);\n      })\n      .addCase(addReceipeAsync.rejected, (state, action) => {\n        state.addReceipe = REQUEST_STATE.REJECTED;\n        state.error = action.error;\n      })\n      .addCase(deleteReceipeAsync.pending, (state) => {\n        state.deleteReceipe = REQUEST_STATE.PENDING;\n        state.error = null;\n      })\n      .addCase(deleteReceipeAsync.fulfilled, (state, action) => {\n        state.deleteReceipe = REQUEST_STATE.FULFILLED;\n        const foundReceipe = state.storedReceipes.find(receipe => (receipe.name === action.payload.name && \n          receipe.ingredients === action.payload.ingredients && receipe.description === action.payload.description));\n        const index = state.storedReceipes.indexOf(foundReceipe);\n\n        state.storedReceipes.splice(index, 1);\n        state.deletedReceipes.push(foundReceipe);\n      })\n      .addCase(deleteReceipeAsync.rejected, (state, action) => {\n        state.deleteReceipe = REQUEST_STATE.REJECTED;\n        state.error = action.error;\n      })\n      .addCase(restoreReceipeAsync.pending, (state) => {\n        state.restoreReceipe = REQUEST_STATE.PENDING;\n        state.error = null;\n      })\n      .addCase(restoreReceipeAsync.fulfilled, (state, action) => {\n        state.restoreReceipe = REQUEST_STATE.FULFILLED;\n        const foundReceipe = state.deletedReceipes.find(receipe => (receipe.name === action.payload.name && \n          receipe.ingredients === action.payload.ingredients && receipe.description === action.payload.description));\n        const index = state.deletedReceipes.indexOf(foundReceipe);\n\n        state.deletedReceipes.splice(index, 1);\n        state.storedReceipes.push(action.payload);\n      })\n      .addCase(restoreReceipeAsync.rejected, (state, action) => {\n        state.restoreReceipe = REQUEST_STATE.REJECTED;\n        state.error = action.error;\n      });\n  }\n});\n\nexport default usersSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}