{"ast":null,"code":"import { combineReducers } from \"redux\";\nlet storedReceipes = [{\n  name: \"poutine\",\n  ingredients: \"fries, source\",\n  instructions: \"bla bla\"\n}, {\n  name: \"bbb\",\n  ingredients: \"fries, source\",\n  instructions: \"bla bla\"\n}, {\n  name: \"aaa\",\n  ingredients: \"fries, source\",\n  instructions: \"bla bla\"\n}];\n\nconst receipesReducer = function () {\n  let receipes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : storedReceipes;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"CLEAR_RECEIPES\") {\n    return [];\n  } else if (action.type === \"ADD_RECEIPE\") {\n    let newArray = [action.payload];\n    return newArray.concat(receipes);\n  } else if (action.type === \"DELETE_RECEIPE\") {\n    let newArray = receipes.filter(item => {\n      return !(action.payload.name === item.name && action.payload.ingredients === item.ingredients && action.payload.instructions === item.instructions);\n    });\n    return newArray;\n  }\n\n  return receipes;\n};\n\nconst rootReducer = combineReducers({\n  receipesReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","storedReceipes","name","ingredients","instructions","receipesReducer","receipes","action","type","newArray","payload","concat","filter","item","rootReducer"],"sources":["/Users/gavinyang/Desktop/CPSC455/CPSC455-Assignments/my-app/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\n\nlet storedReceipes = [\n  {\n    name: \"poutine\",\n    ingredients: \"fries, source\",\n    instructions: \"bla bla\"\n  },\n  {\n    name: \"bbb\",\n    ingredients: \"fries, source\",\n    instructions: \"bla bla\"\n  },\n  {\n    name: \"aaa\",\n    ingredients: \"fries, source\",\n    instructions: \"bla bla\"\n  }\n];\n\nconst receipesReducer = (receipes = storedReceipes, action) => {\n  if (action.type === \"CLEAR_RECEIPES\") {\n    return [];\n  } else if (action.type === \"ADD_RECEIPE\") {\n    let newArray = [action.payload];\n    return newArray.concat(receipes);\n  } else if (action.type === \"DELETE_RECEIPE\") {\n    let newArray = receipes.filter((item) => {\n      return !(\n        action.payload.name === item.name &&\n        action.payload.ingredients === item.ingredients &&\n        action.payload.instructions === item.instructions\n      );\n    });\n    return newArray;\n  }\n  return receipes;\n};\n\nconst rootReducer = combineReducers({\n  receipesReducer\n});\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,IAAIC,cAAc,GAAG,CACnB;EACEC,IAAI,EAAE,SADR;EAEEC,WAAW,EAAE,eAFf;EAGEC,YAAY,EAAE;AAHhB,CADmB,EAMnB;EACEF,IAAI,EAAE,KADR;EAEEC,WAAW,EAAE,eAFf;EAGEC,YAAY,EAAE;AAHhB,CANmB,EAWnB;EACEF,IAAI,EAAE,KADR;EAEEC,WAAW,EAAE,eAFf;EAGEC,YAAY,EAAE;AAHhB,CAXmB,CAArB;;AAkBA,MAAMC,eAAe,GAAG,YAAuC;EAAA,IAAtCC,QAAsC,uEAA3BL,cAA2B;EAAA,IAAXM,MAAW;;EAC7D,IAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;IACpC,OAAO,EAAP;EACD,CAFD,MAEO,IAAID,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;IACxC,IAAIC,QAAQ,GAAG,CAACF,MAAM,CAACG,OAAR,CAAf;IACA,OAAOD,QAAQ,CAACE,MAAT,CAAgBL,QAAhB,CAAP;EACD,CAHM,MAGA,IAAIC,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;IAC3C,IAAIC,QAAQ,GAAGH,QAAQ,CAACM,MAAT,CAAiBC,IAAD,IAAU;MACvC,OAAO,EACLN,MAAM,CAACG,OAAP,CAAeR,IAAf,KAAwBW,IAAI,CAACX,IAA7B,IACAK,MAAM,CAACG,OAAP,CAAeP,WAAf,KAA+BU,IAAI,CAACV,WADpC,IAEAI,MAAM,CAACG,OAAP,CAAeN,YAAf,KAAgCS,IAAI,CAACT,YAHhC,CAAP;IAKD,CANc,CAAf;IAOA,OAAOK,QAAP;EACD;;EACD,OAAOH,QAAP;AACD,CAjBD;;AAmBA,MAAMQ,WAAW,GAAGd,eAAe,CAAC;EAClCK;AADkC,CAAD,CAAnC;AAIA,eAAeS,WAAf"},"metadata":{},"sourceType":"module"}