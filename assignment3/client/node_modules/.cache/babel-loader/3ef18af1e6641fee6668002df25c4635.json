{"ast":null,"code":"// GET all stored receipes\nconst getStoredReceipes = async () => {\n  const response = await fetch('http://localhost:3001/users/storedReceipes', {\n    method: 'GET'\n  });\n  return response.json();\n}; // GET all deleted receipes\n\n\nconst getDeletedReceipes = async () => {\n  const response = await fetch('http://localhost:3001/users/deletedReceipes', {\n    method: 'GET'\n  });\n  return response.json();\n}; // ADD a new receipe to stored receipes\n\n\nconst addReceipe = async receipe => {\n  const response = await fetch('http://localhost:3001/users/storedReceipes', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(receipe)\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    const errorMsg = data === null || data === void 0 ? void 0 : data.message;\n    throw new Error(errorMsg);\n  }\n\n  return data;\n}; // DELETE a receipe from stored receipes\n\n\nconst deleteReceipe = async receipe => {\n  const response = await fetch('http://localhost:3001/users/storedReceipes', {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(receipe)\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    const errorMsg = data === null || data === void 0 ? void 0 : data.message;\n    throw new Error(errorMsg);\n  }\n\n  return data;\n}; // RESTORE a receipe from deleted receipes\n\n\nconst restoreReceipe = async receipe => {\n  const response = await fetch('http://localhost:3001/users/deletedReceipes', {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(receipe)\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    const errorMsg = data === null || data === void 0 ? void 0 : data.message;\n    throw new Error(errorMsg);\n  }\n\n  return data;\n};\n\nexport default {\n  getStoredReceipes,\n  getDeletedReceipes,\n  addReceipe,\n  deleteReceipe,\n  restoreReceipe\n};","map":{"version":3,"names":["getStoredReceipes","response","fetch","method","json","getDeletedReceipes","addReceipe","receipe","headers","body","JSON","stringify","data","ok","errorMsg","message","Error","deleteReceipe","restoreReceipe"],"sources":["/Users/gavinyang/Desktop/CPSC455/CPSC455-Assignments/assignment3/client/src/redux/users/service.js"],"sourcesContent":["// GET all stored receipes\nconst getStoredReceipes = async () => {\n  const response = await fetch('http://localhost:3001/users/storedReceipes', {\n    method: 'GET'\n  });\n  return response.json();\n};\n\n// GET all deleted receipes\nconst getDeletedReceipes = async () => {\n  const response = await fetch('http://localhost:3001/users/deletedReceipes', {\n    method: 'GET'\n  });\n  return response.json();\n};\n\n// ADD a new receipe to stored receipes\nconst addReceipe = async (receipe) => {\n    const response = await fetch('http://localhost:3001/users/storedReceipes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(receipe)\n    });\n  \n    const data = await response.json();\n    if (!response.ok) {\n      const errorMsg = data?.message;\n      throw new Error(errorMsg)\n    }\n    \n    return data;\n  };\n  \n  // DELETE a receipe from stored receipes\n  const deleteReceipe = async (receipe) => {\n    const response = await fetch('http://localhost:3001/users/storedReceipes', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(receipe)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      const errorMsg = data?.message;\n      throw new Error(errorMsg)\n    }\n    \n    return data;\n  };\n\n  // RESTORE a receipe from deleted receipes\n  const restoreReceipe = async (receipe) => {\n    const response = await fetch('http://localhost:3001/users/deletedReceipes', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(receipe)\n    });\n  \n    const data = await response.json();\n    if (!response.ok) {\n      const errorMsg = data?.message;\n      throw new Error(errorMsg)\n    }\n    \n    return data;\n  };\n\n  export default {\n    getStoredReceipes,\n    getDeletedReceipes,\n    addReceipe,\n    deleteReceipe,\n    restoreReceipe\n  };\n\n  \n  "],"mappings":"AAAA;AACA,MAAMA,iBAAiB,GAAG,YAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+C;IACzEC,MAAM,EAAE;EADiE,CAA/C,CAA5B;EAGA,OAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,CALD,C,CAOA;;;AACA,MAAMC,kBAAkB,GAAG,YAAY;EACrC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,EAAgD;IAC1EC,MAAM,EAAE;EADkE,CAAhD,CAA5B;EAGA,OAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,CALD,C,CAOA;;;AACA,MAAME,UAAU,GAAG,MAAOC,OAAP,IAAmB;EAClC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+C;IACzEC,MAAM,EAAE,MADiE;IAEzEK,OAAO,EAAE;MACP,gBAAgB;IADT,CAFgE;IAKzEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;EALmE,CAA/C,CAA5B;EAQA,MAAMK,IAAI,GAAG,MAAMX,QAAQ,CAACG,IAAT,EAAnB;;EACA,IAAI,CAACH,QAAQ,CAACY,EAAd,EAAkB;IAChB,MAAMC,QAAQ,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAAvB;IACA,MAAM,IAAIC,KAAJ,CAAUF,QAAV,CAAN;EACD;;EAED,OAAOF,IAAP;AACD,CAhBH,C,CAkBE;;;AACA,MAAMK,aAAa,GAAG,MAAOV,OAAP,IAAmB;EACvC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+C;IACzEC,MAAM,EAAE,QADiE;IAEzEK,OAAO,EAAE;MACP,gBAAgB;IADT,CAFgE;IAKzEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;EALmE,CAA/C,CAA5B;EAOA,MAAMK,IAAI,GAAG,MAAMX,QAAQ,CAACG,IAAT,EAAnB;;EACA,IAAI,CAACH,QAAQ,CAACY,EAAd,EAAkB;IAChB,MAAMC,QAAQ,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAAvB;IACA,MAAM,IAAIC,KAAJ,CAAUF,QAAV,CAAN;EACD;;EAED,OAAOF,IAAP;AACD,CAfD,C,CAiBA;;;AACA,MAAMM,cAAc,GAAG,MAAOX,OAAP,IAAmB;EACxC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,EAAgD;IAC1EC,MAAM,EAAE,QADkE;IAE1EK,OAAO,EAAE;MACP,gBAAgB;IADT,CAFiE;IAK1EC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;EALoE,CAAhD,CAA5B;EAQA,MAAMK,IAAI,GAAG,MAAMX,QAAQ,CAACG,IAAT,EAAnB;;EACA,IAAI,CAACH,QAAQ,CAACY,EAAd,EAAkB;IAChB,MAAMC,QAAQ,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAAvB;IACA,MAAM,IAAIC,KAAJ,CAAUF,QAAV,CAAN;EACD;;EAED,OAAOF,IAAP;AACD,CAhBD;;AAkBA,eAAe;EACbZ,iBADa;EAEbK,kBAFa;EAGbC,UAHa;EAIbW,aAJa;EAKbC;AALa,CAAf"},"metadata":{},"sourceType":"module"}